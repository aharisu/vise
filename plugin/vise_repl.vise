;=============================================================================
; FILE: vise_repl.vise
; AUTHOR:  aharisu <foo.yobina@gmail.com>
; Last Modified: 04 Jan 2013.
; License: MIT license;{{{
;     Permission is hereby granted, free of charge, to any person obtaining
;     a copy of this software and associated documentation files (the
;     "Software"), to deal in the Software without restriction, including
;     without limitation the rights to use, copy, modify, merge, publish,
;     distribute, sublicense, and/or sell copies of the Software, and to
;     permit persons to whom the Software is furnished to do so, subject to
;     the following conditions:
;
;     The above copyright notice and this permission notice shall be included
;     in all copies or substantial portions of the Software.
;
;     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
;     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
;     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
;     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
;     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
;     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.;}}}
;=============================================================================

(when (exists "loaded_vise_repl")
  (finish))
(defvar g:loaded_vise_repl 1)

(defvar save-cpo &cpo)

(raw-vimscript "
set cpo&vim
")

(defmacro def-global (name def)
  `(defvar ,(string->symbol (string-append "g:" (x->string name)))
     (get 'g: ,(x->string name) ,def)))

(def-global vise-enable-ring-history 1)
(def-global vise-updatetime 1000)
(def-global vise-buffer-width 30)
(def-global vise-buffer-height 15)
(def-global vise-buffer-direction "h")

(raw-vimscript "
command! -nargs=0 ViseREPL :call vise_repl#open_new_repl(0)
command! -nargs=0 ViseREPLH :call vise_repl#open_new_repl(0, 'h')
command! -nargs=0 ViseREPLV :call vise_repl#open_new_repl(0, 'v')

command! -nargs=0 ViseREPLOutputScript :call vise_repl#open_new_repl(1)

command! -nargs=0 ViseREPLWithBuffer :call vise_repl#open_new_repl_with_buffer()
command! -nargs=0 ViseREPLWithBufferH :call vise_repl#open_new_repl_with_buffer('h')
command! -nargs=0 ViseREPLWithBufferV :call vise_repl#open_new_repl_with_buffer('v')

command! -nargs=1 ViseREPLSend :call vise_repl#send_text(<q-args>)

vnoremap <silent> <Plug>(vise_repl_send_block) :call vise_repl#send_text_block()<CR>
  ")
(set! &cpo save-cpo)

; vim: foldmethod=marker commentstring=;%s
